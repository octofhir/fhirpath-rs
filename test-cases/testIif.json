{
  "name": "testIif",
  "description": null,
  "source": "fhir-test-cases r5",
  "tests": [
    {
      "name": "testIif1",
      "expression": "iif(Patient.name.exists(), 'named', 'unnamed') = 'named'",
      "input": null,
      "inputfile": "patient-example.json",
      "expected": [
        true
      ],
      "tags": [
        "r5-xml",
        "testIif"
      ],
      "outputTypes": [
        "boolean"
      ]
    },
    {
      "name": "testIif2",
      "expression": "iif(Patient.name.empty(), 'unnamed', 'named') = 'named'",
      "input": null,
      "inputfile": "patient-example.json",
      "expected": [
        true
      ],
      "tags": [
        "r5-xml",
        "testIif"
      ],
      "outputTypes": [
        "boolean"
      ]
    },
    {
      "name": "testIif3",
      "expression": "iif(true, true, (1 | 2).toString())",
      "input": null,
      "inputfile": "patient-example.json",
      "expected": [
        true
      ],
      "tags": [
        "r5-xml",
        "testIif"
      ],
      "outputTypes": [
        "boolean"
      ]
    },
    {
      "name": "testIif4",
      "expression": "iif(false, (1 | 2).toString(), true)",
      "input": null,
      "inputfile": "patient-example.json",
      "expected": [
        true
      ],
      "tags": [
        "r5-xml",
        "testIif"
      ],
      "outputTypes": [
        "boolean"
      ]
    },
    {
      "name": "testIif5",
      "expression": "iif(false, 'true-result').empty()",
      "input": null,
      "inputfile": "patient-example.json",
      "expected": [
        true
      ],
      "tags": [
        "r5-xml",
        "testIif"
      ],
      "outputTypes": [
        "boolean"
      ]
    },
    {
      "name": "testIif6",
      "expression": "iif('non boolean criteria', 'true-result', 'false-result')",
      "input": null,
      "inputfile": "patient-example.json",
      "expected": [
        "true-result"
      ],
      "tags": [
        "r5-xml",
        "testIif"
      ],
      "description": "Contested: nothing in the spec about what to do with non-boolean criteria - mixed results from engines",
      "expectError": true,
      "invalidKind": "semantic",
      "mode": "strict",
      "outputTypes": [
        "string"
      ]
    },
    {
      "name": "testIif7",
      "expression": "{}.iif(true, 'true-result', 'false-result')",
      "input": null,
      "inputfile": "patient-example.json",
      "expected": [
        "true-result"
      ],
      "tags": [
        "r5-xml",
        "testIif"
      ],
      "outputTypes": [
        "string"
      ]
    },
    {
      "name": "testIif8",
      "expression": "('item').iif(true, 'true-result', 'false-result')",
      "input": null,
      "inputfile": "patient-example.json",
      "expected": [
        "true-result"
      ],
      "tags": [
        "r5-xml",
        "testIif"
      ],
      "outputTypes": [
        "string"
      ]
    },
    {
      "name": "testIif9",
      "expression": "('context').iif(true, select($this), 'false-result')",
      "input": null,
      "inputfile": "patient-example.json",
      "expected": [
        "context"
      ],
      "tags": [
        "r5-xml",
        "testIif"
      ],
      "outputTypes": [
        "string"
      ]
    },
    {
      "name": "testIif10",
      "expression": "('item1' | 'item2').iif(true, 'true-result', 'false-result')",
      "input": null,
      "inputfile": "patient-example.json",
      "expected": [],
      "tags": [
        "r5-xml",
        "testIif"
      ],
      "expectError": true,
      "invalidKind": "execution"
    },
    {
      "name": "testIif11",
      "expression": "('context').iif($this = 'context','true-result', 'false-result')",
      "input": null,
      "inputfile": "patient-example.json",
      "expected": [
        "true-result"
      ],
      "tags": [
        "r5-xml",
        "testIif"
      ],
      "outputTypes": [
        "string"
      ]
    },
    {
      "name": "testIif12",
      "expression": "Patient.name.first().iif(text.exists(), text, family+given.first())",
      "input": null,
      "inputfile": "patient-example-name.json",
      "expected": [
        "Pater J Chalmers"
      ],
      "tags": [
        "r5-xml",
        "testIif"
      ],
      "outputTypes": [
        "string"
      ]
    }
  ]
}