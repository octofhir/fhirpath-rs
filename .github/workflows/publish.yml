name: Publish to crates.io

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Run in dry-run mode (no actual publishing)"
        required: false
        default: "true"
        type: choice
        options:
          - "true"
          - "false"

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          # Cache key prefix for this workflow
          prefix-key: "publish"
          # Additional cache key components
          key: ${{ hashFiles('**/Cargo.lock') }}
          # Cache all target dirs, registry, and git repos
          cache-targets: true
          cache-on-failure: true

      - name: Install cargo-workspaces
        run: cargo install cargo-workspaces

      - name: Configure git early
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global http.sslVerify true
          git config --global http.version HTTP/1.1

      - name: Verify workspace builds
        run: cargo check --workspace

      - name: Prepare for publishing
        run: ./scripts/prepare-release.sh

      - name: Dry run publishing
        run: |
          echo "üß™ Testing publishing with dry run..."
          if cargo workspaces publish --dry-run --allow-dirty; then
            echo "‚úÖ Dry run completed successfully"
          else
            echo "‚ö†Ô∏è Dry run completed with warnings"
            echo "This may be normal if crates are already published or have dependency issues"
            exit 1  # Still fail for regular releases if there are real issues
          fi

      - name: Publish to crates.io (real)
        if: ${{ github.event_name == 'push' || github.event.inputs.dry_run == 'false' }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo workspaces publish --allow-dirty --token $CARGO_REGISTRY_TOKEN

      - name: Restore development dependencies
        if: always()
        run: ./scripts/restore-dev-dependencies.sh

      - name: Commit restored dependencies
        if: always()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git diff --staged --quiet || git commit -m "chore: restore development dependencies after publishing

          ü§ñ Generated with [Claude Code](https://claude.ai/code)

          Co-Authored-By: Claude <noreply@anthropic.com>"

      - name: Push changes
        if: always()
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
