name: Publish to Crates.io

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          TAG=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG" >> $GITHUB_OUTPUT
          echo "Publishing version: $TAG"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable


      - name: Verify workspace version matches tag
        run: |
          WORKSPACE_VERSION=$(grep '^version = ' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          CRATE_VERSION=$(grep '^version.workspace = true' crates/octofhir-fhirpath/Cargo.toml)
          TAG_VERSION="${{ steps.version.outputs.version }}"
          echo "Workspace version: $WORKSPACE_VERSION"
          echo "Git tag version: $TAG_VERSION"
          echo "Main crate uses workspace version: $([[ -n "$CRATE_VERSION" ]] && echo "yes" || echo "no")"
          if [ "$WORKSPACE_VERSION" != "$TAG_VERSION" ]; then
            echo "Version mismatch! Workspace has $WORKSPACE_VERSION but tag is $TAG_VERSION"
            exit 1
          fi

      - name: Cache Rust toolchain
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
            ~/.rustup/settings.toml
          key: ${{ runner.os }}-rustup-stable-${{ hashFiles('rust-toolchain.toml') }}
          restore-keys: |
            ${{ runner.os }}-rustup-stable-
            ${{ runner.os }}-rustup-

      - name: Cache cargo registry and index
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-publish-target-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/*.rs') }}
          restore-keys: |
            ${{ runner.os }}-publish-target-${{ hashFiles('**/Cargo.lock') }}-
            ${{ runner.os }}-publish-target-
            ${{ runner.os }}-stable-target-

      - name: Run tests
        run: |
          cargo test --workspace --all-features
          cargo test --workspace --release

      - name: Build release
        run: cargo build --release --package octofhir-fhirpath

      - name: Check if crate can be published
        run: |
          cargo publish --dry-run --package octofhir-fhirpath --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish to crates.io
        run: |
          echo "Publishing octofhir-fhirpath v${{ steps.version.outputs.version }} to crates.io..."
          cargo publish --package octofhir-fhirpath --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Update GitHub release with crates.io link
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          append_body: true
          body: |

            ---

            âœ… **Published to crates.io**: https://crates.io/crates/octofhir-fhirpath/${{ steps.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
