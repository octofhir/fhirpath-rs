{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "FHIRPath",
  "scopeName": "source.fhirpath",
  "patterns": [
    { "include": "#keywords" },
    { "include": "#directives" },
    { "include": "#functions" },
    { "include": "#operators" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#booleans" },
    { "include": "#variables" },
    { "include": "#comments" }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.fhirpath",
          "match": "\\b(and|or|xor|implies|as|is|contains|in|mod|div)\\b"
        }
      ]
    },
    "directives": {
      "patterns": [
        {
          "name": "meta.directive.fhirpath",
          "begin": "/\\*\\*",
          "end": "\\*/",
          "patterns": [
            {
              "name": "keyword.directive.fhirpath",
              "match": "@(input|input-file)"
            },
            {
              "include": "#strings"
            }
          ]
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.fhirpath",
          "match": "\\b(where|select|first|last|tail|take|skip|exists|all|empty|count|distinct|union|intersect|exclude|combine|aggregate|iif|toInteger|toDecimal|toString|convertsToInteger|convertsToDecimal|convertsToString|convertsToDateTime|convertsToDate|convertsToTime|convertsToQuantity|convertsToBoolean|startsWith|endsWith|contains|upper|lower|replace|matches|replaceMatches|length|substring|indexOf|hasValue|ofType|trace|now|today|timeOfDay)\\b(?=\\s*\\()"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arithmetic.fhirpath",
          "match": "[+\\-*/%]"
        },
        {
          "name": "keyword.operator.comparison.fhirpath",
          "match": "(=|!=|<|>|<=|>=|~)"
        },
        {
          "name": "keyword.operator.logical.fhirpath",
          "match": "(&|\\|)"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.single.fhirpath",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.fhirpath",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.double.fhirpath",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.fhirpath",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.fhirpath",
          "match": "\\b\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b"
        }
      ]
    },
    "booleans": {
      "patterns": [
        {
          "name": "constant.language.boolean.fhirpath",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.language.fhirpath",
          "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.fhirpath",
          "match": "//.*$"
        },
        {
          "name": "comment.block.fhirpath",
          "begin": "/\\*(?!\\*)",
          "end": "\\*/"
        }
      ]
    }
  }
}
